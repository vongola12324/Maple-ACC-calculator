/* Custom styles to enhance Pico.css */

/* General layout and spacing */
:root {
  --primary: #4a6fa5;
  --primary-hover: #3a5a8c;
  --secondary: #6c757d;
  --secondary-hover: #5a6268;
  --spacing: 0.6rem;
  --border-radius: 0.375rem;
  --font-family: system-ui, -apple-system, "Segoe UI", "Roboto", "Ubuntu", "Cantarell", "Noto Sans", sans-serif;
  --card-background-color: #f8f9fa;
  --card-sectionning-background-color: #e9ecef;
  --font-size: 0.9rem;
}

/* Dark theme support */
[data-theme="dark"] {
  --primary: #6d8cb8;
  --primary-hover: #7d9cc8;
  --card-background-color: #2b3035;
  --card-sectionning-background-color: #212529;
}

/* Main container */
.container {
  max-width: 1200px;
  padding: var(--spacing);
}

/* Base font size reduction */
body {
  font-size: var(--font-size);
}

/* Header styling */
.app-header {
  margin-bottom: 1rem;
  text-align: center;
}

.app-header h1 {
  margin-top: 1rem;
  margin-bottom: 1rem;
  color: var(--primary);
}

/* Form sections */
article {
  margin-bottom: calc(var(--spacing) * 0.8);
  border-radius: var(--border-radius);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  padding: 0;
  height: 100%;
}

article > *:not(header) {
  padding: 0.8rem;
}

article h3 {
  margin: 0;
  font-size: 1.1rem;
  background-color: var(--primary);
  text-align: center;
  padding: 0.8rem;
  color: white;
  border-radius: var(--border-radius) var(--border-radius) 0 0;
}

/* Row layouts */
.monster-row {
  grid-template-columns: 1fr 1fr;
  margin-bottom: 0.8rem;
}

.character-row {
  grid-template-columns: 1fr 1fr;
  margin-bottom: 0.8rem;
}

/* Custom Dropdown Styles */
.custom-dropdown {
  position: relative;
  user-select: none;
  border: 1px solid var(--form-element-border-color);
  border-radius: var(--border-radius);
  background-color: var(--form-element-background-color);
  margin-bottom: calc(var(--spacing) * 0.7);
}

.custom-dropdown .selected-option {
  padding: 0.8rem 1rem;
  cursor: pointer;
  position: relative;
}

.custom-dropdown .selected-option::after {
  content: 'â–¼';
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  font-size: 0.7rem;
  color: var(--secondary);
}

.custom-dropdown .dropdown-options {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background-color: var(--form-element-background-color);
  border: 1px solid var(--form-element-border-color);
  border-radius: var(--border-radius);
  z-index: 10;
  max-height: 0;
  overflow-y: auto;
  transition: max-height 0.2s ease;
  visibility: hidden;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.custom-dropdown.open .dropdown-options {
  max-height: 300px;
  visibility: visible;
  z-index: 100;
}

.custom-dropdown .dropdown-option {
  padding: 0.5rem 1rem;
  cursor: pointer;
}

/* Mob option flex layout */
.mob-option-flex {
  display: flex;
  align-items: center;
}

.mob-level {
  flex: 0 0 auto;
  min-width: 50px;
  font-weight: bold;
}

.mob-name {
  flex: 1;
}

.custom-dropdown .dropdown-option:hover {
  background-color: rgba(var(--primary-rgb), 0.1);
}

.custom-dropdown .dropdown-option.selected {
  background-color: rgba(var(--primary-rgb), 0.2);
  font-weight: bold;
}

/* Monster selection section */
.monster-section .custom-dropdown.areas {
  margin-bottom: calc(var(--spacing) * 0.7);
}

.monster-section .custom-dropdown.mobs {
  margin-top: calc(var(--spacing) * 0.7);
  border: 1px solid var(--form-element-border-color);
  border-radius: var(--border-radius);
  background-color: var(--form-element-background-color);
}

.monster-section .custom-dropdown.mobs .dropdown-options {
  position: relative;
  max-height: 150px;
  visibility: visible;
  border: none;
  box-shadow: none;
}

.search-container, .area-selector {
  margin-bottom: calc(var(--spacing) * 0.7);
}

.sort-buttons {
  display: flex;
  gap: 0.3rem;
  margin-bottom: 0.3rem;
}

.sort-buttons button {
  flex: 1;
  margin: 0;
  padding: 0.3rem 0.5rem;
  font-size: 0.8rem;
}

.sort-buttons button.active {
  background-color: var(--primary);
  color: white;
  border-color: var(--primary);
}

/* Character section */
.damage-type-container {
  margin-bottom: calc(var(--spacing) * 0.7);
}

.damage-type {
  display: flex;
  gap: 0.6rem;
  margin-bottom: 0;
  padding: 0.8rem 0;
  column-gap: 1.25rem;
}

.damage-type legend {
  font-weight: 600;
  font-size: 0.9rem;
  padding: 0 0.3rem;
  margin-bottom: 0.3rem;
}

.radio-label {
  display: flex;
  align-items: center;
  gap: 0.3rem;
  margin: 0;
  cursor: pointer;
}

.radio-label input[type="radio"] {
  margin: 0;
}

.radio-text {
  font-size: 0.9rem;
}

/* Character buttons */
.character-buttons {
  display: flex;
  justify-content: center;
  gap: 0.8rem;
  margin-top: 1rem;
  margin-bottom: 0.5rem;
}

.character-buttons button {
  min-width: 100px;
  padding: 0.4rem 0.8rem;
}

/* Results section and Monster combined section */
.results-section, .monster-combined-section {
  display: flex;
  flex-direction: column;
  height: 100%;
}

/* Enhanced styling for the results card */
.result-card {
  background: linear-gradient(to bottom, var(--card-background-color), var(--card-background-color) 60px, var(--card-background-color) 100%);
}

/* Combined Monster Image and Details Section */
.monster-combined-card, .result-card {
  height: 100%;
  min-height: 220px;
  display: flex;
  flex-direction: column;
}

/* Monster placeholder message */
.monster-placeholder {
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--secondary);
  font-style: italic;
  text-align: center;
  flex: 1;
}

.monster-placeholder p {
  margin: 0;
  padding: 1rem;
  border: 1px dashed var(--secondary);
  border-radius: var(--border-radius);
  background-color: rgba(var(--secondary-rgb), 0.05);
}

.monster-image-details-container {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 1rem;
  padding: 0.8rem 0;
  flex: 1;
}

.monster-image-container {
  flex: 0 0 200px;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0.5rem;
  width: 200px;
}

.monster-details-container {
  flex: 1;
}

#mobPic {
  width: 120px;
  height: 120px;
  object-fit: contain;
  background-color: rgba(255, 255, 255, 0.05);
  border-radius: var(--border-radius);
  padding: 0.5rem;
}

.monster-details {
  padding: 0.3rem 0;
}

.detail-row {
  display: flex;
  margin-bottom: 0.3rem;
  padding-bottom: 0.3rem;
  border-bottom: 1px solid var(--card-sectionning-background-color);
}

.detail-row:last-child {
  margin-bottom: 0;
  padding-bottom: 0;
  border-bottom: none;
}

.detail-label {
  font-weight: bold;
  width: 100px;
}

.detail-value {
  flex: 1;
}

/* Style for level and avoid inputs to match other detail rows */
.level-avoid-row .detail-value {
  display: flex;
  align-items: center;
}

.level-avoid-row .detail-value input {
  width: 100%;
  margin: 0;
  padding: 0.2rem 0.4rem;
  border: none;
  background: transparent;
  color: inherit;
  font-size: inherit;
}

.level-avoid-row .detail-value input:focus {
  outline: none;
  background-color: rgba(var(--primary-rgb), 0.1);
  border-radius: var(--border-radius);
}


.result-card .grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem;
  padding: 1rem 0.8rem;
  text-align: center;
}

.result-card .grid p {
  background-color: rgba(var(--primary-rgb), 0.1);
  border-radius: var(--border-radius);
  padding: 0.8rem;
  margin: 0;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.result-card p > span:first-child {
  font-weight: bold;
  color: var(--primary);
  font-size: 0.9rem;
  display: block;
  margin-bottom: 0.5rem;
}

.result-card p > span:last-child {
  font-size: 1.2rem;
  font-weight: 600;
  display: block;
}

.result-card > p {
  text-align: center;
  background-color: rgba(var(--primary-rgb), 0.15);
  border-radius: var(--border-radius);
  padding: 0.8rem;
  margin: 0 0.8rem 0.8rem 0.8rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

.result-card > p > span:first-child {
  font-weight: bold;
  color: var(--primary);
  font-size: 0.9rem;
  display: block;
  margin-bottom: 0.5rem;
}

.result-card > p > span:last-child {
  font-size: 1.4rem;
  font-weight: 700;
  display: block;
}

/* Add RGB values for primary and secondary colors to use in rgba */
:root {
  --primary-rgb: 74, 111, 165;
  --secondary-rgb: 108, 117, 125;
}

[data-theme="dark"] {
  --primary-rgb: 109, 140, 184;
  --secondary-rgb: 108, 117, 125;
}

/* Action buttons */
.action-buttons {
  display: flex;
  justify-content: center;
  gap: 0.8rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.action-buttons button {
  min-width: 100px;
  padding: 0.4rem 0.8rem;
}

/* Footer */
footer {
  text-align: center;
  margin-top: 0.8rem;
  padding-top: 0.5rem;
  border-top: 1px solid var(--card-sectionning-background-color);
  font-size: 0.8rem;
  color: var(--secondary);
}

/* Form elements */
input, select, button {
  margin-bottom: 0.4rem;
  padding: 0.3rem 0.5rem;
}

label {
  margin-bottom: 0.2rem;
}

/* Grid adjustments */
.grid {
  gap: 0.8rem;
}

/* Responsive adjustments */
@media (max-width: 992px) {
  .monster-row {
    grid-template-columns: 1fr;
  }
  
  .monster-image-details-container {
    flex-direction: column;
    align-items: center;
  }
  
  .monster-image-container {
    margin-bottom: 1rem;
  }
}

@media (max-width: 768px) {
  .monster-row, .character-row {
    grid-template-columns: 1fr;
  }
  
  .action-buttons, .character-buttons {
    flex-direction: column;
  }
  
  .action-buttons button, .character-buttons button {
    width: 100%;
  }
  
  .monster-section select.mobs {
    height: 120px;
  }
}

/* Animations removed as requested */

/* Input focus styles */
input:focus, select:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 0.2rem rgba(74, 111, 165, 0.25);
}

/* Theme toggle */
.theme-switch {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: var(--primary);
  color: white;
  border: none;
  border-radius: 50%;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
  z-index: 1000;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  -moz-appearance: textfield;
}
